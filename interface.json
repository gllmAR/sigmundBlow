[{"id":"a0fb1fd0.4e6dd","type":"websocket-listener","z":"1a136a76.df75a6","path":"/test","wholemsg":"true"},{"id":"9dd618ed.c9ab38","type":"osc in","z":"1a136a76.df75a6","name":"","addr":"127.0.0.1","port":"7778","x":124.86360168457031,"y":447.41192626953125,"wires":[["dacf47be.2530b8"]]},{"id":"eaad9cd.f15526","type":"osc out","z":"1a136a76.df75a6","name":"","addr":"localhost","port":"9000","path":"","x":466.99998474121094,"y":283.0000696182251,"wires":[]},{"id":"dacf47be.2530b8","type":"websocket out","z":"1a136a76.df75a6","name":"","server":"a0fb1fd0.4e6dd","client":"","x":464.99998474121094,"y":385.00000858306885,"wires":[]},{"id":"a517ff1c.5ae8","type":"websocket in","z":"1a136a76.df75a6","name":"","server":"a0fb1fd0.4e6dd","client":"","x":97,"y":300.00003814697266,"wires":[["914003ae.6ec"]]},{"id":"914003ae.6ec","type":"function","z":"1a136a76.df75a6","name":"formatOSC","func":"\nmsg.topic = \"/\"+msg.payload.split(',')[0];\nmsg.payload = parseFloat(msg.payload.split(',')[1]);\n\nreturn msg;","outputs":1,"noerr":0,"x":257.9999694824219,"y":300.00006103515625,"wires":[["eaad9cd.f15526","dacf47be.2530b8"]]},{"id":"ad2a844.f52d578","type":"http response","z":"1a136a76.df75a6","name":"","x":489,"y":178.00003910064697,"wires":[]},{"id":"762a808b.89d58","type":"http in","z":"1a136a76.df75a6","name":"","url":"/test","method":"get","swaggerDoc":"","x":110,"y":178.00003910064697,"wires":[["c49c6c6e.3b639"]]},{"id":"c49c6c6e.3b639","type":"template","z":"1a136a76.df75a6","name":"interface","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>SigmundBlowCtl</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n               \n                var json = JSON.parse(msg.data);\n\n\n                document.getElementById(json.topic+\".label\").innerHTML = json.payload.toPrecision(4);\n                document.getElementById(json.topic+\".slider\").value = json.payload;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                doit(\"refresh\", 1);\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(t, p) {\n            \n            if (ws) \n            { \n                var mess = [t,p]\n                ws.send(mess);\n                \n            }\n            // {ws.send (\n            //     JSON.stringify({ topic: t, payload: p });\n            //     )\n            // }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h3>SigmundBlowCtl</h3>\n        <div id=\"messages\"></div>\n        <div>\n        <button type=\"button\" onclick='doit(\"save, 1\");'>Save</button>\n        <button type=\"button\" onclick='doit(\"load, 1\");'>Load</button>\n         </div>\n         \n         <div>\n       \n         <input id=\"/adc.gain.slider\" type=\"range\" min=\"0\" max=\"1\" value=\"0\" step=\".001\" oninput='doit(\"adc.gain\", value)'>\n              /adc.gain\n         <span id=\"/adc.gain.label\"></span>\n         </div>\n         \n        <div>\n            \n         <input id=\"/vcf.freq.slider\" type=\"range\" min=\"0\" max=\"4000\" value=\"0\" step=\"1\" oninput='doit(\"vcf.freq\", value)'>\n        /vcf.freq\n         <span id=\"/vcf.freq.label\"></span>\n        </div>\n        \n        \n        <div>\n            \n         <input id=\"/vcf.q.slider\" type=\"range\" min=\"0\" max=\"1\" value=\"0\" step=\".001\" oninput='doit(\"vcf.q\", value)'>\n          /vcf.q\n         <span id=\"/vcf.q.label\"></span>\n         </div>\n         \n         \n        <div>\n            \n         <input id=\"/rev.wet.slider\" type=\"range\" min=\"0\" max=\"1\" value=\"0\" step=\".001\" oninput='doit(\"rev.wet\", value)'>\n          /rev.wet\n         <span id=\"/rev.wet.label\"></span>\n         </div>\n         \n        <div>\n            \n         <input id=\"/dac.gain.slider\" type=\"range\" min=\"0\" max=\"1\" value=\"0\" step=\".001\" oninput='doit(\"dac.gain\", value)'>\n          /dac.gain\n         <span id=\"/dac.gain.label\"></span>\n         </div>\n        \n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":288,"y":178.00003910064697,"wires":[["ad2a844.f52d578"]]}]
